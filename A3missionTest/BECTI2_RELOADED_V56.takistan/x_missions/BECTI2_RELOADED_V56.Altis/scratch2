
//____________________________________________________________________________________________

Fix that vehicles are getting one shot by objects such as fences. 
Possibly by introducing an eventhandler for them that disregards any environment damage.
Possibly remove the enourmous splash damage of vehicles. 
For example, exploding resistance BTR-60 can one-shot an Abrams (vote?).

Answer: for now there is running 1 Eventhandler "handledamage" which makes all damges *1.5
reason: fix godmodetanks like cup m1 and get dmr like weapons to 1 hitweapon

https://community.bistudio.com/wiki/Arma_3:_Event_Handlers#HandleDamage

added for serverunits in:
	common_create_Unit.sqf line 58
	common_createVehicle.sqf line 99
added for local units in:
	init_unit.sqf line 40
added for player in:
	init_client.sqf line 678

//____________________________________________________________________________________________

Remove Zu-23 (or any 23mm weapon, such as shilka?) that is able to one shot everything,
 or tune it's damage that it's not so ridiculously op (vote?).

answer: we should vote on it,like if 10player say change it and nobody say no we can change it.
		if quad and an2 found no other problems,thats good for now.it means they found no real bugs and wanted
		report something.
		think strong aa not wrong in general for now,especially because good easa ammo are free atm
 
//____________________________________________________________________________________________

 
 Make so that any attack helicopter
 can't be oneshot by tunguska anti air missile. 
 I had an issue where my hind was oneshot by a linebacker.
 It should be made that it will be forced to land, and maybe 2nd rocket kills (vote??)

answer: every plane gets oneshot by tungu and liner in a2, think its good if we not create flying tanks
		in a3,especially with these huge easa weapons.thats no real bug,but we could vote later about this.
		liner and tungu are requiped with radar missles in balanceinit,to get a proper aa if you go heavy 
		only way in upgrades (uk has no aa on high heavy)
	
 
//____________________________________________________________________________________________

 
 Fix the bug of player marker getting stuck on place, sometimes not showing to other players.
 answer:done,we need test new version(think was just side != string).i rewrote the script and 
		forgot this coreproblem after it.
//____________________________________________________________________________________________ 
 
 Add headless client support for better performance.
 answer:we dont need hc,to much communication travel between server and hc can be create other problems too
 //____________________________________________________________________________________________
 Make camps much stronger, 
 able to withstand 150-200 MG rounds (vote?).
 answer:you cant kill it with normal mg,only m2,dshk or stronger weapons can do it.found no way to get it 1:1 like a2.
 
 
 //____________________________________________________________________________________________
 
 Fix the "No entry" error that appears
 for everyone when someone opens buy menu of a hangar of the map for the first time.
	answer: its mod issue,maybe ask the modowner to fix this.it pops up only once for every class,so i made trigger it 
	on menu select not on spawn only.


//____________________________________________________________________________________________

 Since many wrecks can cause low fps on clients, 
 even with the wreck manager that keeps them around if players are 300 meters within the wreck,
 they should disapear with time. Needs more testing.
 
 answer:they disapear after 10min,if a player closer than 300m it blocks despawn until he away.
		there is no technical reason to focus on despawn objects,only townunits not local.every 
		wreck is still local on spawn machine (its the same class)	and it not moves.so there are 
		no new synced infos for wreck if pos stays.it cost 0 performance.same for corpes.
		keep it a bit gives just the option for salvage it and pick weapons from corpes in a tactical way.
 
 //____________________________________________________________________________________________
 
 There's a possibility that factory autowalling is broken (at least from the start of the game)
 
 answer: like i said i added bulldoozer on buildplace to clear stones and remove wallsscript
		from close factorys too to keep entrance open if you build close.thats feature,no bug.
 
  //____________________________________________________________________________________________
My list from the previous play session
I think that we should fix 2-3 at least before the next test.
```Remove Zu-23 (or any 23mm weapon, such as shilka?) that is able to one shot everything,
 or tune it's damage that it's not so ridiculously op (vote?).--->Lower the damage of 23mm's, M163 and CIWS weapons (vote?).```
Changed



//____________________________________________________________________________________________

_pylonWeapons = [];
{ _pylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
{ _veh removeWeaponGlobal _x } forEach ((weapons _veh) - _pylonWeapons);




_pylonWeapons = [];_veh=vehicle player;
{ _pylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
hint str _pylonWeapons;

{ _veh removeWeaponGlobal _x } forEach ((weapons _veh) - _pylonWeapons);






//get all pylonnames





private _allPylons = "true" configClasses (
		configFile 
		>> 
		"CfgVehicles" 
		>> 
		typeOf _veh
		>> 
		"Components" 
		>> 
		"TransportPylonsComponent" 
		>> 
		"pylons"
		) apply {configName _x};

_strSubText=[];
_ix=0;
{
	_strText = "";
	_strText = getText (configFile >> "CfgMagazines" >> (getPylonMagazines _veh) select _ix >> "displayName");
	_strSubText =_strSubText+ [_strText];	
	_ix = _ix + 1;
} foreach _allPylons;
hint str str _strSubText;



};

-----------------------------------------------------------------------------------
//GET

EASA_get_list_pylonnames={//["pylon1","name2",...]
_veh=vehicle player;
private _allPylons = "true" configClasses (
		configFile 
		>> 
		"CfgVehicles" 
		>> 
		typeOf _veh
		>> 
		"Components" 
		>> 
		"TransportPylonsComponent" 
		>> 
		"pylons"
		) apply {configName _x};
};

EASA_get_list_pylon_loadout={//["magazineclass1","magazineclass2",...]
_veh=vehicle player;
_list= getPylonMagazines _veh;
};


-----------------------------------------------------
//DO


EASA_remove_all_pylon_weapons={

_nonpylonWeapons = [];_veh=vehicle player;
{ _nonpylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
//hint str _pylonWeapons;

{ _veh removeWeaponGlobal _x } forEach ((weapons _veh) - _nonpylonWeapons);
};



//scratch-----------------------------------------------------------------------------------------------------------
_veh = _this select 0;
_pylonsEquipment = _this select 1;

/*
GOM_fnc_aircraftLoadoutClear = {
	params ["_veh"];

	_activePylonMags = GetPylonMagazines _veh;

	{

		[_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",0] ;
		[_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",0] ;

	} forEach _activePylonMags;

	//_pylonWeapons = [];
	//{ _pylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
	
		_allPylonWeapons = [];
	{
	{
		_pylonweapon = getText (configFile >> "CfgMagazines" >> _x >> "pylonWeapon");
		if !(isNil '_pylonweapon') then {
			_allPylonWeapons pushBack _pylonweapon;
		};
	}forEach _x;
	}forEach _activePylonMags;

	
	{ _veh removeWeaponGlobal _x } forEach ((weapons _veh) - _allPylonWeapons);
	systemchat "ende clean";
true
};


//--Given: vehicle pointer, pylons arr--
functionDoLoadOut = {
	_vh = _this select 0;
	_plns = _this select 1;
	//if (_vh call GOM_fnc_aircraftLoadoutClear) then{
	
	//waitUntil {_vh call GOM_fnc_aircraftLoadoutClear};
	
	_vh call GOM_fnc_aircraftLoadoutClear;
	systemchat "hm";
	for "_j" from 0 to (count _plns) - 1 do {
		//_pylonConf = [];					
		for "_k" from 0 to (count (_plns select _j)) - 1 do {
			if(_k < 4) then {				
				_vh setVariable[format['_p%1', _k], (_plns select _j) select _k];
			};
		};		
		
		if(!(isNil { _vh getVariable  '_p2'} ) && !(isNil { _vh getVariable '_p3'} )) then {			
			_vh setPylonLoadOut[_vh getVariable '_p0', _vh getVariable '_p1', _vh getVariable '_p2', _vh getVariable '_p3'];
		} else {
			if(!(isNil { _vh getVariable  '_p2'} )) then {				
				_vh setPylonLoadOut[_vh getVariable '_p0', _vh getVariable '_p1', _vh getVariable '_p2'];
			} else {				
				_vh setPylonLoadOut[_vh getVariable '_p0', _vh getVariable '_p1'];
			};
		};
		
		if(count (_plns select _j) == 5) then {			
			_vh setAmmoOnPylon [_vh getVariable '_p0', (_plns select _j) select 4];			
		};
	};
  //};	
};

[_veh, _pylonsEquipment] spawn functionDoLoadOut;
*/



//--Given: vehicle pointer, pylons arr--
functionDoLoadOut = {
	_vh = _this select 0;
	_plns = _this select 1;
	for "_j" from 0 to (count _plns) - 1 do {
		//_pylonConf = [];					
		for "_k" from 0 to (count (_plns select _j)) - 1 do {
			if(_k < 4) then {				
				_vh setVariable[format['_p%1', _k], (_plns select _j) select _k];
			};
		};		
		
		if(!(isNil { _vh getVariable  '_p2'} ) && !(isNil { _vh getVariable '_p3'} )) then {			
			_vh setPylonLoadOut[_vh getVariable '_p0', _vh getVariable '_p1', _vh getVariable '_p2', _vh getVariable '_p3'];
		} else {
			if(!(isNil { _vh getVariable  '_p2'} )) then {				
				_vh setPylonLoadOut[_vh getVariable '_p0', _vh getVariable '_p1', _vh getVariable '_p2'];
			} else {				
				_vh setPylonLoadOut[_vh getVariable '_p0', _vh getVariable '_p1'];
			};
		};
		
		if(count (_plns select _j) == 5) then {			
			_vh setAmmoOnPylon [_vh getVariable '_p0', (_plns select _j) select 4];			
		};
	};
};

[_veh, _pylonsEquipment] spawn functionDoLoadOut;


-----------------
remove all
------------

_veh=this;
_nonpylonWeapons = [];
_activePylonMags = GetPylonMagazines _veh;
	{
		[_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",_veh] ;
		[_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
	} forEach _activePylonMags;
{ _nonpylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
{ _veh removeWeaponGlobal _x } forEach ((weapons _veh) - _nonpylonWeapons);

--------------------
vehicle setPylonLoadout [pylon, magazine, forced, turret]
[_veh,[_pylonNum,_mag,true,_pylonOwner]] remoteexec ["setPylonLoadOut",0];

//0=gunner
[_veh,[1,"CUP_PylonPod_6Rnd_Vikhr_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh];


--------------------
show all weapons

_veh=this;
private _nonpylonWeaponslist = [];
{ _nonpylonWeaponslist append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);

//sometimes weapons only return pylonweapons



_veh=this;
_nonpylonWeaponslist = [];
{ _nonpylonWeaponslist append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);

_weapons=weapons _veh;
{
if (_x in _weapons) then{
_weapons=_weapons - [_x];
};

}forEach _nonpylonWeaponslist;

hint str _nonpylonWeaponslist;





_veh=this;
_nonpylonWeaponslist = [];
{ _nonpylonWeaponslist append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
hint str _nonpylonWeaponslist;





_veh=this; 
_nonpylonWeapons = []; 
_activePylonMags = GetPylonMagazines _veh; 
 { 
  [_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",0] ; 
  [_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",0] ; 
 } forEach _activePylonMags; 
{ _nonpylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets); 
{ _veh removeWeaponGlobal _x } forEach ((weapons _veh) - _nonpylonWeapons);
[_veh,[1,"CUP_PylonPod_6Rnd_Vikhr_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh]; 
[_veh,[2,"CUP_PylonPod_6Rnd_Vikhr_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh]; 
[_veh,[3,"FIR_9K121_P_8rnd_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh]; 
[_veh,[4,"FIR_9K121_P_8rnd_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh]; 


-------------
_veh=this; 
_nonpylonWeapons = []; 
_activePylonMags = GetPylonMagazines _veh; 
 { 
  [_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",0] ; 
  [_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",0] ; 
 } forEach _activePylonMags; 
[_veh,[1,"CUP_PylonPod_6Rnd_Vikhr_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh]; 
[_veh,[2,"CUP_PylonPod_6Rnd_Vikhr_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh]; 
[_veh,[3,"FIR_9K121_P_8rnd_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh]; 
[_veh,[4,"FIR_9K121_P_8rnd_M",true,[0]]] remoteexec ["setPylonLoadOut",_veh]; 

---------------
remove all 2
------------
_pylons = GetPylonMagazines _veh;
_pylonWeapons = _pylons apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))};

_veh=this;
_nonpylonWeapons = [];
_activePylonMags = GetPylonMagazines _veh;
	{
		[_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",_veh] ;
		[_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
	} forEach _activePylonMags;
{ _nonpylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);


_weapons=weapons _veh;
{
if (_x in _weapons) then{
_weapons=_weapons - [_x];
};

}forEach _nonpylonWeaponslist;


_activePylonMags = GetPylonMagazines this;
_pylonWeapons = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))};

{ _veh removeWeapon _x } forEach (_pylonWeapons);

_this removeWeaponTurret ["UK3CB_BAF_Safe",[-1]];





_veh=this;
_nonpylonWeapons = [];
_activePylonMags = GetPylonMagazines _veh;
_pylonWeapons = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))};
{ _veh removeWeaponGlobal _x } forEach (_pylonWeapons);
	{
		[_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",_veh] ;
		[_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
	} forEach _activePylonMags;
{ _nonpylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
{ _veh removeWeaponGlobal _x } forEach ((weapons _veh) - _nonpylonWeapons);







_veh=this; 
_nonpylonWeapons = []; 
_activePylonMags = GetPylonMagazines _veh; 
_pylonWeapons = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
{ _veh removeWeaponGlobal _x } forEach (_pylonWeapons); 
 { 
  [_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",_veh] ; 
  [_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ; 
 } forEach _activePylonMags; 
{ _nonpylonWeapons append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets); 
{ _veh removeWeaponGlobal _x } forEach ((weapons _veh) - _nonpylonWeapons); 
_activePylonMags = GetPylonMagazines _veh; 
_pylonWeapons = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
hint str _pylonWeapons;//gibt leer zurück






_veh=this; 
_nonpylonWeapons = [];


_activePylonMags = GetPylonMagazines _veh; 
_pylonWeapons = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 


//---improved pylonweaponslist

_veh=this;
_nonpylonWeaponslist = [];
{ _nonpylonWeaponslist append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);

_weapons=weapons _veh;
_activePylonMags = GetPylonMagazines _veh; 
_weapons2 = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 


{if !(_x in _weapons) then{_weapons=_weapons + [_x];};}forEach _weapons2;


{if (_x in _weapons) then{_weapons=_weapons - [_x];};}forEach _nonpylonWeaponslist;
_pylonweaponslist=_weapons;
hint str _weapons;
//---

[
		[1,"PylonLeft1",[0],"PylonRack_4Rnd_LG_scalpel",4,"0:10000646"],
		[2,"PylonLeft2",[0],"PylonRack_19Rnd_Rocket_Skyfire",19,"0:10000648"],
		[3,"PylonRight2",[0],"PylonRack_19Rnd_Rocket_Skyfire",19,"0:10000649"],
		[4,"PylonRight1",[0],"PylonRack_4Rnd_LG_scalpel",4,"0:10000650"]
	]
//____________________________________________________________________________________________beste weapon remove lösung
_veh=this;
_worklist=getAllPylonsInfo _veh;
for "_i" from 0 to (count _worklist) - 1 do {
_activePylonMag = [_worklist#_i#3]; 
_weapon = _activePylonMag apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
_veh removeWeaponTurret [_weapon#0,_worklist#_i#2];
_veh removeMagazineTurret [_worklist#_i#3,_worklist#_i#2];

[_veh,[_i + 1,"",true,_worklist#_i#2]] remoteexec ["setPylonLoadOut",_veh] ;
[_veh,[_i + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
};
//____________________________________________________________________________________________


_veh=this;
_worklist=getAllPylonsInfo _veh;
for "_i" from 0 to (count _worklist) - 1 do {
_activePylonMag = [_worklist#_i#3]; 
_weapon = _activePylonMag apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
[_veh,[_weapon#0,_worklist#_i#2]] remoteexec ["removeWeaponTurret",_veh] ;
[_veh,[_worklist#_i#3,_worklist#_i#2]] remoteexec ["removeMagazineTurret",_veh] ;
[_veh,[_i + 1,"",true,_worklist#_i#2]] remoteexec ["setPylonLoadOut",_veh] ;
[_veh,[_i + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
};






//_____



_this removeWeaponTurret ["CUP_Vmlauncher_9M311M_veh",[0]];
_this removeMagazineTurret ["CUP_8Rnd_9M311M_Tunguska_M",[0]];
	



//---alles weg

_veh=this;


_worklist=getAllPylonsInfo _veh;
for "_i" from 0 to (count _worklist) - 1 do {
_activePylonMag = [_worklist#_i#3]; 
_weapon = _activePylonMag apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
[_veh,[_weapon#0,_worklist#_i#2]] remoteexec ["removeWeaponTurret",_veh] ;
[_veh,[_worklist#_i#3,_worklist#_i#2]] remoteexec ["removeMagazineTurret",_veh] ;
[_veh,[_i + 1,"",true,_worklist#_i#2]] remoteexec ["setPylonLoadOut",_veh] ;
[_veh,[_i + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
};

_activePylonMags = GetPylonMagazines _veh;
	{
		[_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",_veh] ;
		[_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
	} forEach _activePylonMags;
_pylonWeapons =[]


_nonpylonWeaponslist = [];
{ _nonpylonWeaponslist append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
_weapons=weapons _veh;
_activePylonMags = GetPylonMagazines _veh;
_weapons2 = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
{if !(_x in _weapons) then{_weapons=_weapons + [_x];};}forEach _weapons2;
{if (_x in _weapons) then{_weapons=_weapons - [_x];};
}forEach _nonpylonWeaponslist;
_pylonWeapons=_pylonWeapons+_weapons;


{ _veh removeWeaponGlobal _x } forEach (_pylonWeapons);
//[_veh,[_i + 1,"",true,_worklist#_i#2]] remoteexec ["setPylonLoadOut",_veh] ;
//[_veh,[_i + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
//[_veh,[_weapon#0,_worklist#_i#2]] remoteexec ["removeWeaponTurret",_veh] ;

---
_veh=this;

_nonpylonWeaponslist = [_veh] call EASA_get_all_nonpylon_weapons;
_weapons=weapons _veh;
_activePylonMags = GetPylonMagazines _veh;
_weapons2 = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
{if !(_x in _weapons) then{_weapons=_weapons + [_x];};}forEach _weapons2;
{if (_x in _weapons) then{_weapons=_weapons - [_x];};
}forEach _nonpylonWeaponslist;
_pylonweaponslist=_weapons;
hint str _pylonweaponslist;

---alles weg extra


_veh=this;

_nonpylonWeaponslist = [];
{ _nonpylonWeaponslist append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
_weapons=weapons _veh;
_activePylonMags = GetPylonMagazines _veh;
_weapons2 = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
{if !(_x in _weapons) then{_weapons=_weapons + [_x];};}forEach _weapons2;
{if (_x in _weapons) then{_weapons=_weapons - [_x];};
}forEach _nonpylonWeaponslist;


_worklist=getAllPylonsInfo _veh;
for "_i" from 0 to (count _worklist) - 1 do {
_activePylonMag = [_worklist#_i#3]; 
{[_veh,[_x,_worklist#_i#2]] remoteexec ["removeWeaponTurret",_veh] ;}forEach _weapons;
[_veh,[_worklist#_i#3,_worklist#_i#2]] remoteexec ["removeMagazineTurret",_veh] ;
[_veh,[_i + 1,"",true,_worklist#_i#2]] remoteexec ["setPylonLoadOut",_veh] ;
[_veh,[_i + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
};

_activePylonMags = GetPylonMagazines _veh;
	{
		[_veh,[_foreachIndex + 1,"",true]] remoteexec ["setPylonLoadOut",_veh] ;
		[_veh,[_foreachIndex + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
	} forEach _activePylonMags;
_pylonWeapons =[]


_nonpylonWeaponslist = [];
{ _nonpylonWeaponslist append getArray (_x >> "weapons") } forEach ([_veh, configNull] call BIS_fnc_getTurrets);
_weapons=weapons _veh;
_activePylonMags = GetPylonMagazines _veh;
_weapons2 = _activePylonMags apply {getText ((configfile >> "CfgMagazines" >> _x >> "pylonWeapon"))}; 
{if !(_x in _weapons) then{_weapons=_weapons + [_x];};}forEach _weapons2;
{if (_x in _weapons) then{_weapons=_weapons - [_x];};
}forEach _nonpylonWeaponslist;
_pylonWeapons=_pylonWeapons+_weapons;


{ _veh removeWeaponGlobal _x } forEach (_pylonWeapons);
//[_veh,[_i + 1,"",true,_worklist#_i#2]] remoteexec ["setPylonLoadOut",_veh] ;
//[_veh,[_i + 1,0]] remoteexec ["SetAmmoOnPylon",_veh] ;
//[_veh,[_weapon#0,_worklist#_i#2]] remoteexec ["removeWeaponTurret",_veh] ;

"CUP_Vmlauncher_FFAR_veh_19Out"


[_veh,["CUP_Vmlauncher_FFAR_veh_19Out",[-1]]] remoteexec ["removeWeaponTurret",_veh] ;

_veh=this;
{ _veh removeWeaponGlobal _x } forEach (["CUP_Vmlauncher_FFAR_veh_19Out"]);

getMagazineTurret

this removeMagazineTurret ["CUP_Vmlauncher_FFAR_veh_19Out",[-1]];
this removeWeaponTurret ["CUP_Vmlauncher_FFAR_veh_19Out",[-1]];



